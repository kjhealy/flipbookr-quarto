---
title: "Flipbookr with Quarto"
author:
  - name: Kieran Healy
    email: kieran.healy@duke.edu
date: last-modified
format:
 revealjs:
   embed-resources: true
   smaller: true
   keep-md: true
---

# Flipbookr  

- [{{flipbookr}}](https://evamaerey.github.io/flipbookr/) is an R package written by [Gina Reynolds](https://github.com/EvaMaeRey). It's very useful for teaching. It was developed for use with `.Rmd` files [Xaringan](https://slides.yihui.org/xaringan/#1) and presently does not work with [Quarto](https://quarto.org). 

- I hacked-up a version of Flipbookr that does work with Quarto. Use with Xarginan should be exactly the same as before. 

- Right now it's incomplete. I've just focused on getting the main user-facing function, `chunk_reveal()` to work. But this is also most of what the package does. 



# Install 

- My fork is here: <https://github.com/kjhealy/flipbookr>

- It's on a branch named `quarto`. 

- Install it with:  

- `remotes::install_github("kjhealy/flipbookr@quarto")`

# Setup

```{r}
#| echo: true


# install.packages("socviz") ## If needed
library(tidyverse)
library(socviz)

library(flipbookr)

```

The first two packages are just for data and code used on these slides; they aren't required for `flipbookr`

## Main changes

- `chunk_reveal()` can take several new arguments. These are:
- `platform = c("xaringan", "quarto")`
  - Defaults to `xaringan`, so older code/docs should work unchanged.
- `lcolw` and `rcolw`: left and right column widths 
  - Given as characters, e.g. `"40"` and interpreted as percentages. Defaults to "40" left and "60" right
  - These are needed because Quarto handles column markup differently from Xaringan,
  - These arguments do nothing in the `xaringan` case
- `smallcode` Logical, defaults to `FALSE`. 
  - If `TRUE` then inserts a `.smallcode` class name in outputted code blocks.
  - No CSS is added in the package right now. Your theme or your `custom.scss` file needs to define a behavior (e.g. `font-size: 0.75em`) for this class for it to have any effect.
  
## Use

- Same as before but with `chunk_reveal(platform = "quarto")` for Quarto docs. 
- Convenience function `chunkq_reveal()` sets the platform to quarto without you having to specify it every time (q for quarto) 
- `chunq_reveal()` is presently unexported, so use `:::` instead of `::` to grab it.
  
## Limitations

- The main thing not supported from `chunk_reveal()` at present is layouts with more than two columns. 
- Line highlighting in Quarto works differently from Xaringan. Chunks will auto-highlight properly (in the Quarto style) as each new line or group of lines is revealed, but right now you can't use `#<<` to pick out arbitrary lines.
- I think it'd be possible (and probably better) to write a Quarto Lua extension to do this rather than trying to build it in to the flipbookr package directly
- Right now you can't pass in Quarto's line-highlighting syntax for code cells either, so things like `code-line-numbers="6-8"` won't work.(Should be possible to add this though.)

## Things that should still work

- Stepping through code as usual
- `#BREAK` 
- `#ROTATE`
- Use of multiple realizations

## Flipbookr Runthrough

We're going to run this code: 

```{.r}
#| label: flipbookexample
#| echo: false
#| eval: false
gss_sm |> 
  group_by(bigregion, religion) |> 
  tally() |> 
  mutate(pct = round((n/sum(n))*100, 1)) |> 
  drop_na() |> 
  ggplot(mapping = 
           aes(x = pct, 
               y = reorder(religion, -pct), 
               fill = religion)) +
  geom_col() +
    labs(x = "Percent", y = NULL) +
    guides(fill = "none") + 
    facet_wrap(~ bigregion, ncol = 2)
```

With this command: 

````{verbatim}
`r chunk_reveal("flipbookexample", platform = "quarto", title = "Flipbookr Runthrough")`
````


```{r}
#| label: flipbookexample
#| echo: false
#| eval: false
gss_sm |> 
  group_by(bigregion, religion) |> 
  tally() |> 
  mutate(pct = round((n/sum(n))*100, 1)) |> 
  drop_na() |> 
  ggplot(mapping = 
           aes(x = pct, 
               y = reorder(religion, -pct), 
               fill = religion)) +
  geom_col() +
    labs(x = "Percent", y = NULL) +
    guides(fill = "none") + 
    facet_wrap(~ bigregion, ncol = 2)
```

`r flipbookr:::chunq_reveal("flipbookexample", title = "Flipbookr Runthrough", lcolw = "40", rcolw = "60")`

## Back to Quarto

```{r}
#| label: flipbookexample-full
#| echo: true
#| output-location: column
#| code-line-numbers: true
gss_sm |> 
  group_by(bigregion, religion) |> 
  tally() |> 
  mutate(pct = round((n/sum(n))*100, 1)) |> 
  drop_na() |> 
  ggplot(mapping = 
           aes(x = pct, 
               y = reorder(religion, -pct), 
               fill = religion)) +
  geom_col() +
    labs(x = "Percent", y = NULL) +
    guides(fill = "none") + 
    facet_wrap(~ bigregion, ncol = 2)
```



## Flipbookr Break

Using `#BREAK` 

```{r}
#| label: flipbookopts1
#| echo: false
#| eval: false
gss_sm |> 
  group_by(bigregion, religion) |> 
  tally() |> 
  mutate(pct = round((n/sum(n))*100, 1)) |> 
  drop_na() |> #BREAK
  ggplot(mapping = 
           aes(x = pct, 
               y = reorder(religion, -pct), 
               fill = religion)) +
  geom_col() +
    labs(x = "Percent", y = NULL) +
    guides(fill = "none") + 
    facet_wrap(~ bigregion, ncol = 2)
```

`r flipbookr:::chunq_reveal("flipbookopts1", break_type = "user", title = "Flipbookr Break", lcolw = "40", rcolw = "60", smallcode = TRUE)`


## Flipbookr Rotate

Using `#ROTATE` 

```{r}
#| label: flipbookopts2
#| echo: false
#| eval: false

gss_sm |> 
  group_by(bigregion, religion) |> 
  tally() |> 
  mutate(pct = round((n/sum(n))*100, 1)) |> 
  drop_na() |> 
  ggplot(mapping = 
           aes(x = pct, 
               y = reorder(religion, -pct), 
               fill = religion)) +
  geom_col() +
  scale_fill_viridis_d(option = "magma") + #ROTATE
  scale_fill_viridis_d(option = "cividis") + #ROTATE
  scale_fill_viridis_d(option = "plasma") + #ROTATE
    labs(x = "Percent", y = NULL) +
    guides(fill = "none") + 
    facet_wrap(~ bigregion, ncol = 2)
```

`r flipbookr:::chunq_reveal("flipbookopts2", break_type = "rotate", title = "Flipbookr Rotate", lcolw = "40", rcolw = "60", smallcode = TRUE)`

## Flipbookr multi

Using `break_type` to show multiple realizations

(Line highlighting not quite working here)

```{r}
#| label: cars-multi
#| echo: false
#| eval: false

 cars |>  
   sample_frac(size = 1, replace = TRUE) |>       
   ggplot() +              
   aes(x = speed) +
   aes(y = dist) +
   geom_count(
     alpha = .7,
     color = "blue",
     size = 4
     ) + 
   geom_smooth(method = lm, se = FALSE) +
   coord_cartesian(xlim = range(cars$speed),
                   ylim = range(cars$dist)) +
   theme(legend.position = c(.9, .2))
```
 
 
`r flipbookr:::chunq_reveal("cars-multi", break_type = 5, title = "Flipbookr multi")`


## Summary

- For now the forked `{{flipbookr}}` repo is at <https://github.com/kjhealy/flipbookr> with changes on the `quarto` branch

- The repo for these slides can be found at <https://github.com/kjhealy/flipbookr-quarto>

- View these slides directly at <https://kjhealy.github.io/flipbookr-quarto>
